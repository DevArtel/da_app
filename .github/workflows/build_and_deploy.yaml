name: Build and Deploy

on:
  workflow_call:
    inputs:
      build-name:
        required: true
        type: string
      build-number:
        required: true
        type: string
      flavor:
        required: true
        type: string
      deploy:
        required: true
        type: boolean
      android-format:
        required: true
        type: string
      changelog:
        required: false
        default: '{}'
        type: string

env:
  DART_ARTIFACT_NAME: dart-code-${{ github.sha }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: 'üõí Checkout'
        uses: actions/checkout@v4
      - name: 'üíΩ Setup environment'
        uses: ./.github/actions/setup-env
        with:
          install-ruby: 'false'
          repo-token: ${{ github.token }}
      - name: 'üèóÔ∏è Prepare'
        run: |
          melos clean
          melos bs
          melos gen
      - name: 'üß† Upload lib artifact'
        uses: actions/upload-artifact@v3
        with:
          path: apps/app/lib
          name: ${{ env.DART_ARTIFACT_NAME }}
          retention-days: 3

  deploy-android:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: 'üõí Checkout'
        uses: actions/checkout@v4
      - name: 'üß† Download lib artifact'
        uses: actions/download-artifact@v3
        with:
          path: apps/app/lib
          name: ${{ env.DART_ARTIFACT_NAME }}
      - name: 'üíΩ Setup environment'
        uses: ./.github/actions/setup-env
        with:
          repo-token: ${{ github.token }}
      - name: 'üîë Extract keys'
        env:
          ANDROID_RELEASE_KEY: ${{ secrets.ANDROID_RELEASE_KEY }}
          PLAY_STORE_DEPLOY_JSON: ${{ secrets.PLAY_STORE_DEPLOY_JSON }}
        run: |
          echo "$ANDROID_RELEASE_KEY" | base64 -d > apps/app/android/release-keystore.jks
          echo "$PLAY_STORE_DEPLOY_JSON" | base64 -d > apps/app/android/play_store_deploy.json
      - name: 'üèóÔ∏è Build'
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          BUILD_NAME=${{ inputs.build-name }}
          BUILD_NUMBER=${{ inputs.build-number }}
          FLAVOR=${{ inputs.flavor }}
          PACKAGE_FORMAT=${{ inputs.android-format }}
          echo "@@ Build $PACKAGE_FORMAT for $FLAVOR: $BUILD_NUMBER ‚Äì $BUILD_NAME"
          melos build:android
      - name: 'üöÄ Deploy'
        if: ${{ inputs.deploy }}
        uses: maierj/fastlane-action@v3.0.0
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_ANDROID_APP_ID: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
        with:
          lane: deploy_${{ inputs.flavor }}
          subdirectory: 'android'
          options: '{"changelog": ${{ inputs.changelog }}}'

  deploy-ios:
    runs-on: macos-12
    needs: prepare
    timeout-minutes: 90
    env:
      MATCH_GITHUB_BASIC_AUTH: ${{ secrets.MATCH_GITHUB_BASIC_AUTH }}
      MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      IOS_BUNDLE_ID: ${{ secrets.IOS_BUNDLE_ID }}
    steps:
      - name: 'üõí Checkout'
        uses: actions/checkout@v4
      - name: 'üß† Download lib artifact'
        uses: actions/download-artifact@v3
        with:
          path: apps/app/lib
          name: ${{ env.DART_ARTIFACT_NAME }}
      - name: 'üíΩ Setup environment'
        uses: ./.github/actions/setup-env
        with:
          repo-token: ${{ github.token }}
      - name: 'üóÇÔ∏è Install provisioning profiles'
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: 'install_${{inputs.flavor}}_profiles'
          subdirectory: 'ios'
      - name: 'üîë Extract itunes key'
        env:
          ITUNES_API_KEY_ID: ${{ secrets.ITUNES_API_KEY_ID }}
          ITUNES_API_KEY_ISSUER_ID: ${{ secrets.ITUNES_API_KEY_ISSUER_ID }}
          ITUNES_API_KEY: ${{ secrets.ITUNES_API_KEY }}
        run: |
          API_KEY_FILE_NAME="apps/app/ios/AppStoreConnectAuthKey.p8"
          echo "$ITUNES_API_KEY" | base64 -d > $API_KEY_FILE_NAME
      - name: 'üèóÔ∏è Flutter build'
        run: |
          BUILD_NAME=${{ inputs.build-name }}
          BUILD_NUMBER=${{ inputs.build-number }}
          FLAVOR=${{ inputs.flavor }}
          melos build:ios
      - name: 'üèóÔ∏è Fastlane build'
        uses: maierj/fastlane-action@v3.0.0
        with:
          lane: build
          subdirectory: 'ios'
          options: '{ "flavor": "${{ inputs.flavor }}" }'
      - name: 'üöÄ Deploy'
        if: ${{ inputs.deploy }}
        uses: maierj/fastlane-action@v3.0.0
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_IOS_APP_ID: ${{ secrets.FIREBASE_IOS_APP_ID }}
          ITUNES_API_KEY_ID: ${{ secrets.ITUNES_API_KEY_ID }}
          ITUNES_API_KEY_ISSUER_ID: ${{ secrets.ITUNES_API_KEY_ISSUER_ID }}
        with:
          lane: deploy_${{inputs.flavor}}
          subdirectory: 'ios'
          options: '{"changelog": ${{ inputs.changelog }}}'
