version: '3'

tasks:
  clean:
    desc: '🧹 Clean project'
    cmds:
      - ./flutterw clean

  clean-generated:
    desc: '🧽 Remove generated code'
    aliases: [ cleang ]
    cmds:
      - rm -rf lib/generated

  clean-all:
    desc: '🧼 Clean project and remove generated code'
    aliases: [ cleana ]
    cmds:
      - task: clean
      - task: clean-generated

  install:
    desc: '📦️ Get dependencies in all packages'
    cmds:
      - ./scripts/get_dependencies.sh

  format:
    desc: '💼 Format code'
    aliases: [ fmt ]
    cmds:
      - ./dartw format -l 120 .

  generate-localization:
    desc: '🎌️ Generate l10n'
    aliases: [ genloc ]
    cmds:
      - ./flutterw gen-l10n
      - cd packages/ui_kit && ./flutterw gen-l10n

  generate-code:
    desc: '👷 Run build_runner'
    aliases: [ genc ]
    cmds:
      - ./dartw run build_runner build --delete-conflicting-outputs
      - task: generate-code-ui-kit
      - task: generate-code-storybook

  generate-code-ui-kit:
    desc: '👷 Run build_runner in ui_kit'
    cmd: ./dartw run build_runner build --delete-conflicting-outputs
    dir: packages/ui_kit

  generate-code-storybook:
    desc: '👷 Run build_runner in storybook'
    cmd: ./dartw run build_runner build --delete-conflicting-outputs
    dir: storybook

  generate-splash:
    desc: '🎨 Generate native code for Splash screen'
    cmd: ./dartw run flutter_native_splash:create

  generate:
    desc: '🚧 Generate everything'
    aliases: [ gen ]
    cmds:
      - task: clean-generated
      - task: generate-localization
      - task: generate-code
      - task: generate-splash
      - task: format

  analyze:
    desc: '👮 Run flutter analyze'
    cmds:
      - ./scripts/flutter_analyze.sh

  test:
    desc: '🐒 Run tests with coverage'
    cmds:
      - ./scripts/test.sh

  check:
    desc: '🔦 Run checks'
    cmds:
      - task: analyze
      - task: test

  build-android:
    desc: '🤖 Build Android apk'
    vars:
      PACKAGE_FORMAT: '{{ default "apk" .PACKAGE_FORMAT }}'
    cmds:
      - ./flutterw build {{ .PACKAGE_FORMAT }} --flavor {{ .FLAVOR }} --build-number={{ .BUILD_NUMBER }} --build-name={{ .BUILD_NAME }}

  pod-install:
    desc: '🥜 Install cocoa pods'
    dir: ios
    cmds:
      - ../flutterw precache --ios
      - pod install

  build-ios:
    desc: '🍏 Build iOS app'
    cmds:
      - ./flutterw build ios --flavor {{ .FLAVOR }} --build-number={{ .BUILD_NUMBER }} --build-name={{ .BUILD_NAME }}

  prepare-no-check:
    aliases: [ pnc ]
    desc: '🧑‍🍳 Clean project, get dependencies, and generate all the code'
    cmds:
      - task: clean-all
      - task: install
      - task: generate

  prepare:
    desc: '👌 Clean project, get dependencies, generate all the code, and run checks'
    cmds:
      - task: prepare-no-check
      - task: check

  storybook-run:
    aliases: [ sbr ]
    desc: '✨ Run Storybook in browser'
    cmds:
      - ../flutterw run -d chrome
    dir: storybook

  storybook-build:
    aliases: [ sbb ]
    desc: '🧚 Build Storybook for production'
    cmds:
      - ../flutterw build web
    dir: storybook

  gh-set-secrets:
    desc: '🤐 Set GitHub Actions Secrets from ./github/.env'
    cmds:
      - gh secret set -f .env
    dir: .github
